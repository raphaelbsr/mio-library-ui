{"version":3,"sources":["webpack:///../src/components/Button/Button.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","Button","__position","__code","__scope","Playground","Props","variant","React","isLoading","setIsLoading","onClick","setTimeout","isMDXComponent"],"mappings":"+QAUaA,G,UAAe,S,kNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,0DAAyC,6BAAGC,WAAW,KAAQ,CAC3D,KAAQ,gDAD6B,yBAAzC,KAGA,8LACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAOC,GAAIC,IAAQH,QAAQ,UAC3B,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,8CAAiDC,SAAO,GACzFP,QACAH,kBACAW,eACAC,UACAL,YALyF,gBAMzFP,IANyF,EAOzFH,eAPyF,GAQxFO,QAAQ,cACb,YAAC,IAAD,CAAQS,QAAQ,YAAYT,QAAQ,UAApC,WAEE,iBAAQ,CACN,GAAM,qCADR,qCAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,6ZAAgaC,SAAO,GACxcP,QACAH,kBACAW,eACAC,UACAL,YALwc,gBAMxcP,IANwc,EAOxcH,eAPwc,GAQvcO,QAAQ,eACZ,WAAM,MACiCU,YAAe,GAA1CC,EADN,KACiBC,EADjB,KAaD,OAAO,YAAC,IAAD,CAAQH,QAAQ,YAAYE,UAAWA,EAAWE,QAVrC,WAClBD,GAAa,GACbE,YAAW,WAITF,GAAa,KACZ,MAG0EZ,QAAQ,UAAhF,mB,gNASfH,EAAWkB,gBAAiB","file":"component---src-components-button-button-mdx-14a36b4512b05c9c40c6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/raphael/Documents/NodeProjects/ReactJs/mio-library-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Button from './index.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Button é um componente baseado no `}<a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/components/buttons/\"\n      }}>{`Button do Material-UI`}</a>{`.`}</p>\n    <p>{`Sua implementação encapsula a exibição de uma barra circular de progresso para indicar que há um processamento acontecendo quando o usuário realiza a ação de clique.`}</p>\n    <h2 {...{\n      \"id\": \"propriedades\"\n    }}>{`Propriedades`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"uso-básico\"\n    }}>{`Uso básico`}</h2>\n    <Playground __position={1} __code={'<Button variant=\\\"contained\\\">Padrão</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Button variant=\"contained\" mdxType=\"Button\">Padrão</Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"uso-com-feedback-de-processamento\"\n    }}>{`Uso com feedback de processamento`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const [isLoading, setIsLoading] = React.useState(false)\\n  const handleClick = () => {\\n    setIsLoading(true)\\n    setTimeout(() => {\\n      /*\\n      / O setTimeout está simulando o processamento de alguma operação\\n      */\\n      setIsLoading(false)\\n    }, 3000)\\n  }\\n  return (\\n    <Button variant=\\\"contained\\\" isLoading={isLoading} onClick={handleClick}>\\n      Salvar\\n    </Button>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isLoading, setIsLoading] = React.useState(false);\n\n        const handleClick = () => {\n          setIsLoading(true);\n          setTimeout(() => {\n            /*\n            / O setTimeout está simulando o processamento de alguma operação\n            */\n            setIsLoading(false);\n          }, 3000);\n        };\n\n        return <Button variant=\"contained\" isLoading={isLoading} onClick={handleClick} mdxType=\"Button\">\n        Salvar\n      </Button>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}