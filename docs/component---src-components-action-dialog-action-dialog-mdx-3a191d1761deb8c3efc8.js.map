{"version":3,"sources":["webpack:///../src/components/ActionDialog/ActionDialog.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","ActionDialog","__position","__code","__scope","Playground","Props","Button","ContentContainer","React","isOpen","setIsOpen","fecharActionDialog","onCancelClick","onOkClick","title","variant","onClick","isMDXComponent"],"mappings":"uSAYaA,G,UAAe,S,8NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,kXACA,mHACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAOC,GAAIC,IAAcF,QAAQ,UACjC,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,ykBAA8kBC,SAAO,GACtnBN,QACAH,kBACAU,eACAC,UACAL,iBACAM,WACAC,sBAPsnB,gBAQtnBb,IARsnB,EAStnBH,eATsnB,GAUrnBO,QAAQ,eACZ,WAAM,MAC2BU,YAAe,GAApCC,EADN,KACcC,EADd,KAOKC,EAAqB,WACzBD,GAAU,IAGZ,OAAO,uBACP,YAAC,IAAD,CAAcD,OAAQA,EAAQG,cAAeD,EAAoBE,UAAWF,EAAoBG,MAAM,gBAAgBhB,QAAQ,gBAA9H,iDAGA,YAAC,IAAD,CAAQiB,QAAQ,YAAYC,QAZF,WACxBN,GAAU,IAW4CZ,QAAQ,UAAhE,0B,4NAURH,EAAWsB,gBAAiB","file":"component---src-components-action-dialog-action-dialog-mdx-3a191d1761deb8c3efc8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/raphael/Documents/NodeProjects/ReactJs/mio-library-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport ActionDialog from './index.tsx';\nimport Button from '../Button/index.tsx';\nimport ContentContainer from '../ContentContainer/index.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"actiondialog\"\n    }}>{`ActionDialog`}</h1>\n    <p>{`Um Diálogo é um tipo de janela modal que aparece na frente do conteúdo do aplicativo para fornecer informações críticas ou solicitar uma decisão. As caixas de diálogo desativam toda a funcionalidade do aplicativo quando elas são exibidas e permanecem na tela até que sejam confirmadas, rejeitadas ou que uma ação necessária tenha sido executada.`}</p>\n    <p>{`Os diálogos são intencionalmente interruptivos, então eles devem ser usados com moderação.`}</p>\n    <h2 {...{\n      \"id\": \"propriedades\"\n    }}>{`Propriedades`}</h2>\n    <Props of={ActionDialog} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"uso-básico\"\n    }}>{`Uso Básico`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [isOpen, setIsOpen] = React.useState(false)\\n  const abrirActionDialog = () => {\\n    setIsOpen(true)\\n  }\\n  const fecharActionDialog = () => {\\n    setIsOpen(false)\\n  }\\n  return (\\n    <div>\\n      <ActionDialog\\n        isOpen={isOpen}\\n        onCancelClick={fecharActionDialog}\\n        onOkClick={fecharActionDialog}\\n        title=\\\"Action Dialog\\\"\\n      >\\n        Clique em algum dos botões abaixo para fechar\\n      </ActionDialog>\\n      <Button variant=\\\"contained\\\" onClick={abrirActionDialog}>\\n        Abrir Dialog\\n      </Button>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ActionDialog,\n      Button,\n      ContentContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isOpen, setIsOpen] = React.useState(false);\n\n        const abrirActionDialog = () => {\n          setIsOpen(true);\n        };\n\n        const fecharActionDialog = () => {\n          setIsOpen(false);\n        };\n\n        return <div>\n        <ActionDialog isOpen={isOpen} onCancelClick={fecharActionDialog} onOkClick={fecharActionDialog} title=\"Action Dialog\" mdxType=\"ActionDialog\">\n          Clique em algum dos botões abaixo para fechar\n        </ActionDialog>\n        <Button variant=\"contained\" onClick={abrirActionDialog} mdxType=\"Button\">\n          Abrir Dialog\n        </Button>\n      </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}